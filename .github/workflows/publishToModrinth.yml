name: Publish To Modrinth

on:
  release:
    types: [ "published" ]
jobs:
  publish-to-modrinth:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ "1.21.1", "1.21.4" ]
      max-parallel: 1 # Guarantee versions are published in this order

    steps:
      - name: "üìù Generate Version Name"
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
          MINECRAFT_VERSION: ${{ matrix.version }}
        id: "version_name"
        run: |
          echo "version_name=${TAG_NAME:1}+${MINECRAFT_VERSION}" >> $GITHUB_OUTPUT
          echo "version_name_escaped_plus=${TAG_NAME:1}\+${MINECRAFT_VERSION}" >> $GITHUB_OUTPUT
      - name: "‚è¨ Get Release Changelog and Download Jar"
        uses: KevinRohn/github-full-release-data@v2
        with:
          version: ${{ github.event.release.tag_name }}
          body-markdown-file-path: "CHANGELOG.md"
          asset-file: "jamboree-${{ steps.version_name.outputs.version_name_escaped_plus }}.jar"
      - name: "üìù Remove Jar Version Details from Changelog"
        shell: "python"
        run: |
          f = open("CHANGELOG.md", "r+")
          lines = f.readlines()
          while lines[-1].strip() == "" or lines[-1].startswith("Jar for Minecraft version"): lines.pop(-1)
          f.seek(0)
          f.write("".join(lines))
          f.truncate()
          f.close()
      - name: "‚è´ Publish Jar to Modrinth"
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: "HKHihQCz"
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          modrinth-featured: false # Do not set featured ourselves, instead use Modrinth "auto-feature"

          files: jamboree-${{ steps.version_name.outputs.version_name }}.jar
          name: ${{ steps.version_name.outputs.version_name }}
          version: ${{ steps.version_name.outputs.version_name }}
          version-type: "release"
          changelog-file: "CHANGELOG.md"
          dependencies: |
            fabric-language-kotlin(required)
            yacl(required)
            fabric-api(required)
            noxesium(optional)
            modmenu(optional)
          # Loader and Minecraft versions should be parsed from fabric.mod.json
